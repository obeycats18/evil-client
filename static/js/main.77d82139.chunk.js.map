{"version":3,"sources":["components/Button/Button.tsx","components/Products/ProductItem.tsx","validators/common.validators.ts","validators/product.validator.ts","components/Form/Field.tsx","components/Form/Form.tsx","components/Products/ProductForm.tsx","state/products.ts","hooks/useForm.tsx","components/Products/ProductModal.tsx","components/Modal/Modal.tsx","API/productAPI.ts","components/Products/ProductsList.tsx","App.tsx","index.tsx"],"names":["Button","type","text","minWidth","onClick","children","className","style","ProductItem","product","category","name","price","isRequired","value","Boolean","length","isContainsDigital","match","productFormValidators","rule","error_message","isContainsLetter","phone","then","isMoreThen","Field","placeholder","errors","isValid","onBlur","onChange","classNames","undefined","map","error","Form","onSubmit","fields","options","console","valid","values","handleBlur","handleChange","field","ActionTypes","ProductForm","onClose","form","useState","initialValues","setValues","setErrors","setValid","isFormValid","setIsFormValid","_validate","key","validators","errorValidators","filter","removeErrorByKey","event","_errors","_valid","_values","target","handleSubmit","preventDefault","_validates","useForm","e","log","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ProductModal","Modal","opened","getCheapestProduct","products","minPrice","Math","min","apply","find","productState","current","productReducer","state","action","SET_PRODUCTS","payload","SET_CURRENT","getProducts","a","fetch","response","json","ProductList","modalOpened","setModalOpened","useReducer","dispatch","handleProductClick","handleModalClose","fetchProducts","useEffect","visible","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77d82139.chunk.js","sourcesContent":["import React from \"react\";\n\ntype ButtonTypes = \"filled\" | \"outline\";\n\ninterface ButtonProps {\n  type: ButtonTypes;\n  text: string;\n  minWidth?: string;\n  onClick?: any;\n  className?: string;\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  type,\n  text,\n  minWidth,\n  onClick,\n  children,\n  className,\n}) => {\n  return (\n    <button\n      style={{ minWidth }}\n      onClick={onClick || null}\n      className={`button button--${type} ${className}`}>\n      {text}\n      {children}\n    </button>\n  );\n};\n","import React from \"react\";\nimport { Product } from \"../../@types/product.types\";\nimport { Button } from \"../Button/Button\";\n\ninterface ProductItemProps {\n  product: Product;\n  onClick: (product: Product) => void;\n}\n\nexport const ProductItem: React.FC<ProductItemProps> = ({\n  product,\n  onClick,\n}) => {\n  return (\n    <div className='product'>\n      <div className='product__info'>\n        <p className='product__category'>{product.category}</p>\n        <h2 className='product__name'>{product.name}</h2>\n      </div>\n      <div className='product__actions'>\n        <h2 className='product__price'>\n          <span className='currency-symbol'>$</span> {product.price}\n        </h2>\n\n        <Button onClick={() => onClick(product)} text='Buy' type='outline' />\n      </div>\n    </div>\n  );\n};\n","export const isRequired = <V extends string>(value: V) => {\n  return Boolean(value.length);\n};\n\nexport const isContainsDigital = <V extends string>(value: V) => {\n  return Boolean(value.match(/\\d/gi));\n};\n\nexport const isContainsLetter = <V extends string>(value: V) => {\n  return !isContainsDigital(value);\n};\n\nexport const isMoreThen = <V extends string>(value: V, then: number) => {\n  return value.length >= then;\n};\n","import {\n  isRequired,\n  isContainsLetter,\n  isContainsDigital,\n  isMoreThen,\n} from \"./common.validators\";\nexport const productFormValidators = {\n  name: [\n    {\n      rule: (value: string) => isRequired(value),\n      error_message: \"This field in required\",\n    },\n    {\n      rule: (value: string) => isContainsLetter(value),\n      error_message: \"Only letters allowed\",\n    },\n  ],\n  phone: [\n    {\n      rule: (value: string) => isRequired(value),\n      error_message: \"This field in required\",\n    },\n    {\n      rule: (value: string) => isContainsDigital(value),\n      error_message: \"Only numbers allowed\",\n    },\n    {\n      rule: (value: string) => isMoreThen(value, 12),\n      error_message: \"Should contain 12 characters\",\n    },\n  ],\n};\n","import React, { ChangeEvent, FocusEvent, HTMLInputTypeAttribute } from \"react\";\n\nimport classNames from \"classnames\";\n\ninterface FieldProps {\n  type?: HTMLInputTypeAttribute;\n  placeholder?: string;\n  errors?: string[] | null;\n  className?: string;\n  isValid?: boolean;\n  name?: string;\n  value: any;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: (e: FocusEvent<HTMLInputElement>) => void;\n}\n\nexport const Field: React.FC<FieldProps> = ({\n  type,\n  placeholder,\n  errors,\n  className,\n  isValid,\n  name,\n  onBlur,\n  onChange,\n}) => {\n  return (\n    <div\n      className={classNames(\n        \"field \",\n        className,\n        isValid === undefined ? \"\" : isValid ? \"field--success\" : \"field--error\"\n      )}>\n      <input\n        onChange={onChange}\n        onBlur={onBlur}\n        name={name}\n        type={type || \"text\"}\n        className='field__input'\n        placeholder={placeholder}\n      />\n\n      {errors &&\n        errors.map((error) => (\n          <span key={error} className='field__error-message'>\n            {error}\n          </span>\n        ))}\n    </div>\n  );\n};\n","import React, {\n  FormEvent,\n  HTMLInputTypeAttribute,\n  PropsWithChildren,\n} from \"react\";\nimport { UseFormReturnValue } from \"../../hooks/useForm\";\nimport { Field } from \"./Field\";\n\nexport type FormField = {\n  name: string;\n  type: HTMLInputTypeAttribute;\n  placeholder?: string;\n  className?: string;\n};\n\ninterface FormOptions<T = {}> extends UseFormReturnValue<T> {}\n\ninterface FormProps<T> {\n  onSubmit: (e: FormEvent<HTMLFormElement>) => void;\n  fields: FormField[];\n  options: FormOptions<T>;\n}\n\nexport function Form<T extends { [key: string]: any }>({\n  onSubmit,\n  children,\n  fields,\n  options,\n}: PropsWithChildren<FormProps<T>>) {\n  if (!fields) {\n    console.error(\"Field must be specified!\");\n    return null;\n  }\n\n  const { valid, values, handleBlur, handleChange, errors } = options;\n\n  return (\n    <form onSubmit={onSubmit}>\n      {fields.map((field) => (\n        <Field\n          key={field.name}\n          value={values[field.name]}\n          onChange={handleChange(field.name)}\n          onBlur={handleBlur(field.name)}\n          errors={errors && errors[field.name]}\n          isValid={valid[field.name]}\n          type='text'\n          className='product-form__field'\n          placeholder='Name'\n        />\n      ))}\n\n      {children}\n    </form>\n  );\n}\n","import React from \"react\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { productFormValidators } from \"../../validators/product.validator\";\n\nimport { Button } from \"../Button/Button\";\nimport { Form, FormField } from \"../Form/Form\";\n\ntype ProductFormValues = { name: string; phone: string };\n\ninterface ProductFormProps {\n  onClose: () => void;\n}\n\nconst fields: FormField[] = [\n  {\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Name\",\n    className: \"product-form__field\",\n  },\n  {\n    name: \"phone\",\n    type: \"text\",\n    placeholder: \"Number\",\n    className: \"product-form__field\",\n  },\n];\n\nexport const ProductForm: React.FC<ProductFormProps> = ({ onClose }) => {\n  const form = useForm<ProductFormValues>({\n    initialValues: { name: \"\", phone: \"\" },\n    validators: productFormValidators,\n    onSubmit: (e) => {\n      console.log(form.values);\n      onClose();\n    },\n  });\n\n  return (\n    <Form<ProductFormValues>\n      onSubmit={form.handleSubmit}\n      fields={fields}\n      options={form}>\n      <Button\n        text='Order'\n        type='filled'\n        className='product-form__button'\n        minWidth='100%'>\n        <div className='arrow-icon'>\n          <svg\n            width='20'\n            height='20'\n            viewBox='0 0 20 20'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'>\n            <path\n              d='M4.16663 10H15.8333'\n              stroke='white'\n              strokeWidth='2'\n              strokeLinecap='round'\n              strokeLinejoin='round'\n            />\n            <path\n              d='M10 4.16666L15.8333 9.99999L10 15.8333'\n              stroke='white'\n              strokeWidth='2'\n              strokeLinecap='round'\n              strokeLinejoin='round'\n            />\n          </svg>\n        </div>\n      </Button>\n    </Form>\n  );\n};\n","import { Product } from \"./../@types/product.types\";\n\nexport interface ProductsState {\n  products: Product[];\n  current: Product | null;\n}\n\nexport enum ActionTypes {\n  SET_PRODUCTS = \"PRODUCTS/SET_PRODUCTS\",\n  SET_CURRENT = \"PRODUCTS/SET_CURRENT\",\n}\n\ntype ActionType = {\n  type: ActionTypes;\n  payload: any;\n};\n\nexport const getCheapestProduct = (products: Product[]) => {\n  const minPrice = Math.min.apply(\n    Math,\n    products.map((product) => product.price)\n  );\n\n  return products.find((product) => product.price === minPrice);\n};\n\nexport const productState: ProductsState = {\n  products: [],\n  current: null,\n};\n\nexport const productReducer = (\n  state: ProductsState = productState,\n  action: ActionType\n) => {\n  switch (action.type) {\n    case ActionTypes.SET_PRODUCTS: {\n      return { ...state, products: action.payload };\n    }\n    case ActionTypes.SET_CURRENT: {\n      return { ...state, current: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { useState, FormEvent, FocusEvent, ChangeEvent } from \"react\";\n\ntype Rule = (value: any) => boolean;\n\ntype Validator = {\n  rule: Rule;\n  error_message: string;\n};\n\ntype Validations<T> = Partial<Record<keyof T, Validator[]>>;\n\ntype ErrorRecord<T> = Partial<Record<keyof T, string[]>>;\ntype ValidRecord<T> = Partial<Record<keyof T, boolean>>;\n\ntype OnBlurFunction = <T>(\n  key: Extract<keyof Record<keyof T, any>, string>\n) => (e: FocusEvent<HTMLInputElement>) => void;\ntype OnSubmitFunction = (e: FormEvent<HTMLFormElement>) => void;\ntype OnChangeFunction = <T>(\n  key: Extract<keyof Record<keyof T, any>, string>\n) => (e: ChangeEvent<HTMLInputElement>) => void;\n\ninterface UseFormOptions<T> {\n  initialValues: Partial<T>;\n  validators?: Validations<T>;\n  onSubmit?: OnSubmitFunction;\n}\n\nexport interface UseFormReturnValue<T> {\n  values: Partial<T>;\n  handleChange: OnChangeFunction;\n  handleSubmit: OnSubmitFunction;\n  handleBlur: OnBlurFunction;\n  errors: ErrorRecord<T> | null;\n  valid: ValidRecord<T>;\n}\n\nexport const useForm = <V extends Record<keyof V, any> = {}>(\n  options: UseFormOptions<V>\n): UseFormReturnValue<V> => {\n  const [values, setValues] = useState<V>(options.initialValues as V);\n  const [errors, setErrors] = useState<ErrorRecord<V> | null>({});\n  const [valid, setValid] = useState<ValidRecord<V>>({});\n  const [isFormValid, setIsFormValid] = useState<boolean>();\n\n  const _validate = (key: Extract<keyof Record<keyof V, any>, string>) => {\n    const value = values[key];\n    const validators = options.validators![key];\n\n    const errorValidators = validators\n      ?.filter(({ rule }) => !rule(value))\n      .map(({ error_message }) => error_message);\n\n    return {\n      isValid: Boolean(!errorValidators?.length),\n      error: errorValidators,\n    };\n  };\n\n  const removeErrorByKey = (\n    key: Extract<keyof Record<keyof V, any>, string>,\n    errors: ErrorRecord<V> | null\n  ) => {\n    if (!errors) {\n      return null;\n    }\n    delete errors[key];\n    return errors;\n  };\n\n  const handleSubmit: OnSubmitFunction = (event) => {\n    event.preventDefault();\n\n    if (!options.validators) {\n      setErrors(null);\n    }\n\n    const _errors: ErrorRecord<V> = {};\n    const _validates: ValidRecord<V> = {};\n\n    for (const key in options.validators) {\n      _validates[key] = true;\n\n      const { isValid, error } = _validate(key);\n\n      setIsFormValid(isValid);\n\n      if (!isValid) {\n        _errors[key] = error;\n        _validates[key] = false;\n      }\n    }\n\n    if (!isFormValid) {\n      setErrors(_errors);\n      setValid(_validates);\n\n      return;\n    }\n\n    if (options.onSubmit && typeof options.onSubmit === \"function\") {\n      options.onSubmit(event);\n    }\n  };\n\n  const handleBlur: OnBlurFunction = (key) => (event) => {\n    event.preventDefault();\n\n    if (!options.validators) {\n      return;\n    }\n\n    const { isValid, error } = _validate(key);\n\n    setErrors((_errors) => {\n      if (!_errors) {\n        return null;\n      }\n\n      if (!isValid) {\n        return { ..._errors, [key]: error };\n      }\n\n      return removeErrorByKey(key, _errors);\n    });\n    setValid((_valid) => ({ ..._valid, [key]: isValid }));\n  };\n\n  const handleChange: OnChangeFunction = (key) => (event) => {\n    setErrors((_errors) => removeErrorByKey(key, _errors));\n    setValid((_valid) => ({ ..._valid, [key]: undefined }));\n    setValues((_values) => ({ ..._values, [key]: event.target.value }));\n  };\n\n  return {\n    values,\n    handleChange,\n    handleSubmit,\n    handleBlur,\n    errors,\n    valid,\n  };\n};\n","import React from \"react\";\n\nimport { Product } from \"../../@types/product.types\";\nimport { ProductForm } from \"./ProductForm\";\n\ninterface ProductModalProps {\n  product: Product | null;\n  onClose: () => void;\n}\n\nexport const ProductModal: React.FC<ProductModalProps> = ({\n  product,\n  onClose,\n}) => {\n  return (\n    product && (\n      <div className='product-modal'>\n        <div className='product__info'>\n          <p className='product__category'>{product.category}</p>\n          <h2 className='product__name'>{product.name}</h2>\n          <h2 className='product__price'>\n            <span className='currency-symbol'>$</span> {product.price}\n          </h2>\n        </div>\n\n        <ProductForm onClose={onClose} />\n      </div>\n    )\n  );\n};\n","import React from \"react\";\n\nimport classNames from \"classnames\";\n\ninterface ModalProps {\n  opened: boolean;\n  onClose: () => void;\n}\n\nexport const Modal: React.FC<ModalProps> = ({ opened, onClose, children }) => {\n  return (\n    <div className={classNames(\"modal\", { \"modal--opened\": opened })}>\n      <div onClick={onClose} className='modal__close-btn'>\n        <span className='close-icon'></span>\n      </div>\n      {opened && children}\n    </div>\n  );\n};\n","import { Product } from \"./../@types/product.types\";\n\nconst API_BASE_URL = \"http://localhost:3001\";\n\nexport const getProducts = async (): Promise<Product[]> => {\n  const response = await fetch(`${API_BASE_URL}/products`);\n\n  return response.json();\n};\n","import React, { useEffect, useReducer, useState } from \"react\";\n\nimport classNames from \"classnames\";\n\nimport { Product } from \"../../@types/product.types\";\n\nimport { ProductItem } from \"./ProductItem\";\nimport { ProductModal } from \"./ProductModal\";\nimport { Modal } from \"../Modal/Modal\";\nimport { Button } from \"../Button/Button\";\nimport {\n  ActionTypes,\n  getCheapestProduct,\n  productReducer,\n  productState,\n} from \"../../state/products\";\nimport { getProducts } from \"../../API/productAPI\";\n\nexport const ProductList: React.FC = () => {\n  const [modalOpened, setModalOpened] = useState(false);\n  const [state, dispatch] = useReducer(productReducer, productState);\n\n  const handleProductClick = (product: Product) => {\n    dispatch({ type: ActionTypes.SET_CURRENT, payload: product });\n    setModalOpened(true);\n  };\n\n  const handleCheapestButtonClick = () => {\n    dispatch({\n      type: ActionTypes.SET_CURRENT,\n      payload: getCheapestProduct(state.products),\n    });\n    setModalOpened(true);\n  };\n\n  const handleModalClose = () => {\n    dispatch({ type: ActionTypes.SET_CURRENT, payload: null });\n    setModalOpened(false);\n  };\n\n  const fetchProducts = async () => {\n    const products = await getProducts();\n    dispatch({ type: ActionTypes.SET_PRODUCTS, payload: products });\n  };\n\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  return (\n    <>\n      <div className='product-list'>\n        {state.products.map((product: Product) => (\n          <ProductItem\n            key={product.name}\n            onClick={handleProductClick}\n            product={product}\n          />\n        ))}\n      </div>\n\n      <div className={classNames(\"content--hidden\", { visible: modalOpened })}>\n        <Modal onClose={handleModalClose} opened={modalOpened}>\n          <ProductModal onClose={handleModalClose} product={state.current} />\n        </Modal>\n      </div>\n\n      <div className='tools'>\n        <Button\n          type='filled'\n          text='Buy cheapest'\n          onClick={handleCheapestButtonClick}\n          minWidth='235px'\n        />\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport { ProductList } from \"./components/Products/ProductsList\";\n\nfunction App() {\n  return (\n    <div className='container'>\n      <ProductList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"./scss/index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}